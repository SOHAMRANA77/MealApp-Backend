<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.mealapp</groupId>
	<artifactId>backend</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>backend</name>
	<description>MyMeal is a comprehensive meal management application developed using Spring Boot, offering a seamless experience for users to manage their meal preferences, bookings, and schedules. The application provides a range of features aimed at simplifying the meal booking process and enhancing user convenience.  Key Features:  User Authentication: MyMeal ensures secure access to the platform through robust user authentication mechanisms. Users can register for an account, log in securely, and manage their profile information.  Password Recovery: In case users forget their passwords, the app offers a password recovery feature. Users can request a password reset link via email or SMS, enabling them to regain access to their accounts securely.  Meal Booking: MyMeal allows users to book meals conveniently according to their preferences. From single-day bookings to bulk bookings for extended periods, users can choose the desired meal plan and quantity effortlessly.  Booking Management: Users can view and manage their meal bookings through an intuitive interface. The app provides options to modify, cancel, or reschedule bookings as per user requirements.  Calendar Integration: MyMeal integrates a calendar feature that displays all scheduled meal bookings in a user-friendly format. Users can visualize their meal plans for specific dates, facilitating better organization and planning.  Time Constraints: The application incorporates time constraints to ensure seamless meal management. Users can only book meals within specified time frames, preventing bookings outside designated operating hours.  Technical Implementation:  Spring Boot Framework: MyMeal is built using the Spring Boot framework, leveraging its capabilities for rapid development and efficient resource utilization.  Database Integration: The application integrates with a relational database management system (MySQL) to store user data, meal preferences, and booking details securely. REST_ful API: MyMeal exposes a set of REST_ful APIs to facilitate communication between the frontend and backend components. These APIs enable seamless data exchange and interaction with the application.  Security Measures: MyMeal implements robust security measures, including encryption of sensitive data, CSRF protection, and role-based access control (RBAC), to ensure the confidentiality and integrity of user information.  Conclusion: MyMeal is a feature-rich meal management application designed to streamline the meal booking process and enhance user convenience. With its user-friendly interface, comprehensive features, and robust technical implementation, MyMeal aims to revolutionize the way users manage their meal schedules effectively.</description>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

<!--		<dependency>-->
<!--			<groupId>org.springframework.boot</groupId>-->
<!--			<artifactId>spring-boot-starter-scheduling</artifactId>-->
<!--		</dependency>-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>



		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>5.0.0</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>1.3.2</version>
		</dependency>



		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>0.11.5</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>0.11.5</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>0.11.5</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>
		<dependency>
			<groupId>com.vaadin.external.google</groupId>
			<artifactId>android-json</artifactId>
			<version>0.0.20131108.vaadin1</version>
			<scope>compile</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
